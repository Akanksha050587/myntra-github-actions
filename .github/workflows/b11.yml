name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Docker Hub repo via API (if not exists)
        run: |
          curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
          https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/myapp/ | grep 200 || \
          curl -X POST -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
          https://hub.docker.com/v2/repositories/ \
          -H "Content-Type: application/json" \
          -d '{"name": "myapp", "is_private": false}'

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ steps.vars.outputs.sha_short }} .

      - name: Tag as latest (optional)
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/myapp:${{ steps.vars.outputs.sha_short }} ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Push image with SHA tag
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ steps.vars.outputs.sha_short }}

      - name: Push latest tag (optional)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Verify image exists on Docker Hub
        run: |
          docker logout
          echo "Checking image availability via manifest..."
          docker manifest inspect docker.io/${{ secrets.DOCKER_USERNAME }}/myapp:${{ steps.vars.outputs.sha_short }} \
          && echo "✅ Image pushed successfully!" \
          || (echo "❌ Image not found!" && exit 1)
